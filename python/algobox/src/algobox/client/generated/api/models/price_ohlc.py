# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class PriceOhlc(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, instrument=None, ask_open=None, bid_open=None, ask_high=None, bid_high=None, ask_low=None, bid_low=None, ask_close=None, bid_close=None):
        """
        PriceOhlc - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'instrument': 'str',
            'ask_open': 'float',
            'bid_open': 'float',
            'ask_high': 'float',
            'bid_high': 'float',
            'ask_low': 'float',
            'bid_low': 'float',
            'ask_close': 'float',
            'bid_close': 'float'
        }

        self.attribute_map = {
            'instrument': 'instrument',
            'ask_open': 'askOpen',
            'bid_open': 'bidOpen',
            'ask_high': 'askHigh',
            'bid_high': 'bidHigh',
            'ask_low': 'askLow',
            'bid_low': 'bidLow',
            'ask_close': 'askClose',
            'bid_close': 'bidClose'
        }

        self._instrument = instrument
        self._ask_open = ask_open
        self._bid_open = bid_open
        self._ask_high = ask_high
        self._bid_high = bid_high
        self._ask_low = ask_low
        self._bid_low = bid_low
        self._ask_close = ask_close
        self._bid_close = bid_close


    @property
    def instrument(self):
        """
        Gets the instrument of this PriceOhlc.


        :return: The instrument of this PriceOhlc.
        :rtype: str
        """
        return self._instrument

    @instrument.setter
    def instrument(self, instrument):
        """
        Sets the instrument of this PriceOhlc.


        :param instrument: The instrument of this PriceOhlc.
        :type: str
        """

        self._instrument = instrument

    @property
    def ask_open(self):
        """
        Gets the ask_open of this PriceOhlc.


        :return: The ask_open of this PriceOhlc.
        :rtype: float
        """
        return self._ask_open

    @ask_open.setter
    def ask_open(self, ask_open):
        """
        Sets the ask_open of this PriceOhlc.


        :param ask_open: The ask_open of this PriceOhlc.
        :type: float
        """

        self._ask_open = ask_open

    @property
    def bid_open(self):
        """
        Gets the bid_open of this PriceOhlc.


        :return: The bid_open of this PriceOhlc.
        :rtype: float
        """
        return self._bid_open

    @bid_open.setter
    def bid_open(self, bid_open):
        """
        Sets the bid_open of this PriceOhlc.


        :param bid_open: The bid_open of this PriceOhlc.
        :type: float
        """

        self._bid_open = bid_open

    @property
    def ask_high(self):
        """
        Gets the ask_high of this PriceOhlc.


        :return: The ask_high of this PriceOhlc.
        :rtype: float
        """
        return self._ask_high

    @ask_high.setter
    def ask_high(self, ask_high):
        """
        Sets the ask_high of this PriceOhlc.


        :param ask_high: The ask_high of this PriceOhlc.
        :type: float
        """

        self._ask_high = ask_high

    @property
    def bid_high(self):
        """
        Gets the bid_high of this PriceOhlc.


        :return: The bid_high of this PriceOhlc.
        :rtype: float
        """
        return self._bid_high

    @bid_high.setter
    def bid_high(self, bid_high):
        """
        Sets the bid_high of this PriceOhlc.


        :param bid_high: The bid_high of this PriceOhlc.
        :type: float
        """

        self._bid_high = bid_high

    @property
    def ask_low(self):
        """
        Gets the ask_low of this PriceOhlc.


        :return: The ask_low of this PriceOhlc.
        :rtype: float
        """
        return self._ask_low

    @ask_low.setter
    def ask_low(self, ask_low):
        """
        Sets the ask_low of this PriceOhlc.


        :param ask_low: The ask_low of this PriceOhlc.
        :type: float
        """

        self._ask_low = ask_low

    @property
    def bid_low(self):
        """
        Gets the bid_low of this PriceOhlc.


        :return: The bid_low of this PriceOhlc.
        :rtype: float
        """
        return self._bid_low

    @bid_low.setter
    def bid_low(self, bid_low):
        """
        Sets the bid_low of this PriceOhlc.


        :param bid_low: The bid_low of this PriceOhlc.
        :type: float
        """

        self._bid_low = bid_low

    @property
    def ask_close(self):
        """
        Gets the ask_close of this PriceOhlc.


        :return: The ask_close of this PriceOhlc.
        :rtype: float
        """
        return self._ask_close

    @ask_close.setter
    def ask_close(self, ask_close):
        """
        Sets the ask_close of this PriceOhlc.


        :param ask_close: The ask_close of this PriceOhlc.
        :type: float
        """

        self._ask_close = ask_close

    @property
    def bid_close(self):
        """
        Gets the bid_close of this PriceOhlc.


        :return: The bid_close of this PriceOhlc.
        :rtype: float
        """
        return self._bid_close

    @bid_close.setter
    def bid_close(self, bid_close):
        """
        Sets the bid_close of this PriceOhlc.


        :param bid_close: The bid_close of this PriceOhlc.
        :type: float
        """

        self._bid_close = bid_close

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
