# coding: utf-8

"""

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

    
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
"""

from pprint import pformat
from six import iteritems
import re


class CloseStrategy(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, take_profit=None, stop_loss=None):
        """
        CloseStrategy - a model defined in Swagger

        :param dict swaggerTypes: The key is attribute name
                                  and the value is attribute type.
        :param dict attributeMap: The key is attribute name
                                  and the value is json key in definition.
        """
        self.swagger_types = {
            'take_profit': 'float',
            'stop_loss': 'float'
        }

        self.attribute_map = {
            'take_profit': 'takeProfit',
            'stop_loss': 'stopLoss'
        }

        self._take_profit = take_profit
        self._stop_loss = stop_loss


    @property
    def take_profit(self):
        """
        Gets the take_profit of this CloseStrategy.


        :return: The take_profit of this CloseStrategy.
        :rtype: float
        """
        return self._take_profit

    @take_profit.setter
    def take_profit(self, take_profit):
        """
        Sets the take_profit of this CloseStrategy.


        :param take_profit: The take_profit of this CloseStrategy.
        :type: float
        """

        self._take_profit = take_profit

    @property
    def stop_loss(self):
        """
        Gets the stop_loss of this CloseStrategy.


        :return: The stop_loss of this CloseStrategy.
        :rtype: float
        """
        return self._stop_loss

    @stop_loss.setter
    def stop_loss(self, stop_loss):
        """
        Sets the stop_loss of this CloseStrategy.


        :param stop_loss: The stop_loss of this CloseStrategy.
        :type: float
        """

        self._stop_loss = stop_loss

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
